var $jscomp = { scope: {}, findInternal: function (a, b, c) { a instanceof String && (a = String(a)); for (var d = a.length, e = 0; e < d; e++) { var f = a[e]; if (b.call(c, f, e, a)) return { i: e, v: f } } return { i: -1, v: void 0 } } }; $jscomp.defineProperty = "function" == typeof Object.defineProperties ? Object.defineProperty : function (a, b, c) { if (c.get || c.set) throw new TypeError("ES3 does not support getters and setters."); a != Array.prototype && a != Object.prototype && (a[b] = c.value) };
$jscomp.getGlobal = function (a) { return "undefined" != typeof window && window === a ? a : "undefined" != typeof global ? global : a }; $jscomp.global = $jscomp.getGlobal(this); $jscomp.polyfill = function (a, b, c, d) { if (b) { c = $jscomp.global; a = a.split("."); for (d = 0; d < a.length - 1; d++) { var e = a[d]; e in c || (c[e] = {}); c = c[e] } a = a[a.length - 1]; d = c[a]; b = b(d); b != d && null != b && $jscomp.defineProperty(c, a, { configurable: !0, writable: !0, value: b }) } };
$jscomp.polyfill("Array.prototype.find", function (a) { return a ? a : function (a, c) { return $jscomp.findInternal(this, a, c).v } }, "es6-impl", "es3");
var Demo = function () { this.type = new Type("type-main-content");
this.combo = new Combo("combo-main-content", "combo-main-echarts"); this.init = function () { this.type.render(); this.combo.render(); return this } }, Statistics = function (a) {
    this.elem = a; this.data = function () { return "<table width='100%' class='am-table am-table-bd am-table-bdrs am-table-striped am-table-hover am-text-xs'><thead><tr><th>\u9879\u76ee</th><th>\u7edf\u8ba1\u7ed3\u679c</th><th>\u622a\u6b62\u65f6\u95f4</th></tr></thead><tbody><tr><td>\u573a\u666fA</td><td><span class='am-badge am-badge-default'>10</span></td><td>2016-08-25</td></tr></tr></thead><tbody><tr><td>\u573a\u666fB</td><td><span class='am-badge am-badge-primary'>30</span></td><td>2016-08-25</td></tr></tr></thead><tbody><tr><td>\u573a\u666fC</td><td><span class='am-badge am-badge-warning'>300</span></td><td>2016-08-25</td></tr></tbody></table>" };
    this.render = function () { $("#" + this.elem).append(this.data()) }
}, Type = function (a) {
    this.elem = a;
  this.data = {

            tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},
            legend:{data:["QQ",,"微信","爱奇艺","迅雷","网易云音乐"]},
            grid:{left:"3%",right:"4%",bottom:"3%",containLabel:true},
            xAxis:{type:"category",data:times},
            yAxis:{type:"value"},
            animation:false,
            series:[
            {name:"QQ",type:"bar",data:qq},
            {name:"微信",type:"bar",data:wc},
            {name:"爱奇艺",type:"bar",data:iqy},
            {name:"迅雷",type:"bar",data:tdr},
            {name:"网易云音乐",type:"bar",data:we}]
            };


    this.render = function () { $("#" + this.elem).height(400);
    this.chart = echarts.init(document.getElementById(a));
    this.chart.setOption(this.data);
    }
}, Combo = function (a, b) {
    this.elem = b; this.content = a; this.data = function () {
        /*这里是下面的饼状图的设定，tables里面可以改统计表的数据，options里面改饼状图，最好还是通过后端传到html的变量里在这里用 */
        return {
            options: {title:{text:"应用程序流量统计",subtext:"饼状图",x:"center"},
            tooltip:{trigger:"item",formatter:"{a} <br/>{b} : {c} ({d}%)"},
            legend:{orient:"vertical",left:"left",data:["QQ","微信","爱奇艺","迅雷","网易云音乐","其他"]},
            series:[{name:"\u8bbf\u95ee\u6765\u6e90",type:"pie",radius:"55%",center:["50%","60%"],
            animation:false,
            data:[
            {value:app_num[0],name:"QQ"},
             {value:app_num[1],name:"微信"},
            {value:app_num[2],name:"爱奇艺"},
             {value:app_num[3],name:"迅雷"},
            {value:app_num[4],name:"网易云音乐"},
            {value:app_num[5],name:"其他"}],
            itemstyle:{emphasis:{shadowblur:10,shadowoffsetx:0,shadowcolor:"rgba(0, 0, 0, 0.5)"}}}]},
        }
    };
    this.render = function () { $("#" + this.elem).height(600);
    var a = this.data();
    //$("#" + this.content).append(a.tables);
    this.chart = echarts.init(document.getElementById(b));
    this.chart.setOption(a.options) }
}, data = [], geoCoordMap = {}, convertData = function (a) { for (var b = [], c = 0; c < a.length; c++) { var d = geoCoordMap[a[c].name]; d && b.push({ name: a[c].name, value: d.concat(a[c].value) }) } return b }, mapData = convertData(data), valueData = convertData(data.sort(function (a, b) { return b.value - a.value })).slice(0, 11); Box.Application.addModule("topbarcollapse", function (a) { function b() { $(c).find("li a").removeClass("am-active") } var c; return { init: function () { c = a.getElement() }, destroy: function () { c = null }, onclick: function (c, e, f) { switch (f) { case "fisrt": b(); $(e).addClass("am-active"); a.broadcast("firstOpen"); a.broadcast("secondClose"); break; case "second": b(), $(e).addClass("am-active"), a.broadcast("firstClose"), a.broadcast("secondOpen") } } } }); Box.Application.addModule("firstlevel",
function (a) { var b;
return { init: function ()
{ b = a.getElement();

 setInterval(function () { (new Demo).init()},1000)

}, destroy: function () { b = null }, onclick: function (a, b, e) { },
onchange: function (a, b, e) { }, onmessage: { firstOpen: function () { $(b).hasClass("am-hide") && $(b).removeClass("am-hide") }, firstClose: function () { $(b).hasClass("am-hide") || $(b).addClass("am-hide") } } } }); Box.Application.addModule("secondlevel", function (a) { var b, c, d = -1; return { init: function () { b = a.getElement(); c = new Details("detail-main-content", "detail-main-echarts") }, destroy: function () { b = c = null }, onclick: function (a, b, c) { }, onchange: function (a, b, c) { }, onmessage: { secondOpen: function () { $(b).hasClass("am-hide") && ($(b).removeClass("am-hide"), -1 == d && c.render(), d++) }, secondClose: function () { $(b).hasClass("am-hide") || $(b).addClass("am-hide") } } } }); (function (a, b) { "function" === typeof define && define.amd ? define(["exports", "echarts"], b) : "object" === typeof exports && "string" !== typeof exports.nodeName ? b(exports, require("echarts")) : b({}, a.echarts) })(this, function (a, b) {
    var c = function (a) { "undefined" !== typeof console && console && console.error && console.error(a) }; b ? b.registerMap ? b.registerMap("china", {
        type: "FeatureCollection", features: [], UTF8Encoding: !0
    }) : c("ECharts Map is not loaded") : c("ECharts is not Loaded")
});
